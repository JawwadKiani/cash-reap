{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jawwa/OneDrive/Desktop/Documents/My-Projects/CashReap/CashReap-1/cashreap/client/src/components/card-comparison.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport {\n  Button, Card, CardContent, CardDescription, CardHeader, CardTitle, Badge, Separator\n} from \"@/components/ui\";\nimport {\n  X, Plus, CreditCard, DollarSign, Calendar, Star, Check, Info\n} from \"lucide-react\";\n\ninterface CreditCardData {\n  id: string;\n  name: string;\n  issuer: string;\n  annualFee: number;\n  baseReward: number;\n  description: string;\n  creditScoreRequired?: string;\n  welcomeBonus?: string;\n  features?: string[];\n}\n\ninterface CardComparisonProps {\n  selectedCards?: CreditCardData[];\n  onCardRemove?: (cardId: string) => void;\n  onCardAdd?: () => void;\n  className?: string;\n}\n\nconst SAMPLE_CARDS: CreditCardData[] = [\n  // sample card data omitted for brevity (unchanged)\n];\n\nconst COMPARISON_CATEGORIES = [\n  { key: \"annualFee\", label: \"Annual Fee\", type: \"fee\" },\n  { key: \"baseReward\", label: \"Base Rewards\", type: \"reward\" },\n  { key: \"welcomeBonus\", label: \"Welcome Bonus\", type: \"text\" },\n  { key: \"creditScoreRequired\", label: \"Credit Score\", type: \"text\" },\n  { key: \"features\", label: \"Key Benefits\", type: \"list\" }\n];\n\nexport function CardComparison({\n  selectedCards = SAMPLE_CARDS.slice(0, 2),\n  onCardRemove,\n  onCardAdd,\n  className\n}: CardComparisonProps) {\n  const [expandedCardId, setExpandedCardId] = useState<string | null>(null);\n\n  const columnGrid = {\n    1: \"grid-cols-1\",\n    2: \"grid-cols-2\",\n    3: \"grid-cols-3\"\n  }[selectedCards.length as 1 | 2 | 3] || \"grid-cols-1\";\n\n  const comparisonGrid = {\n    1: \"grid-cols-[200px_1fr]\",\n    2: \"grid-cols-[200px_1fr_1fr]\",\n    3: \"grid-cols-[200px_1fr_1fr_1fr]\"\n  }[selectedCards.length as 1 | 2 | 3] || \"grid-cols-[200px_1fr]\";\n\n  const formatValue = (card: CreditCardData, category: any) => {\n    switch (category.type) {\n      case \"fee\":\n        return card.annualFee === 0 ? \"No Annual Fee\" : `$${card.annualFee}`;\n      case \"reward\":\n        return `${card.baseReward}%`;\n      case \"text\":\n        return (card as any)[category.key] || \"Not specified\";\n      case \"list\":\n        return card.features || [];\n      default:\n        return (card as any)[category.key] || \"—\";\n    }\n  };\n\n  const getBestValue = (category: any) => {\n    if (category.type === \"fee\") return Math.min(...selectedCards.map(c => c.annualFee));\n    if (category.type === \"reward\") return Math.max(...selectedCards.map(c => c.baseReward));\n    return null;\n  };\n\n  const isHighlighted = (card: CreditCardData, category: any, best: any) => {\n    if (best === null) return false;\n    return category.type === \"fee\"\n      ? card.annualFee === best\n      : category.type === \"reward\"\n      ? card.baseReward === best\n      : false;\n  };\n\n  if (!selectedCards.length) {\n    return (\n      <Card className={className}>\n        <CardContent className=\"p-8 text-center\">\n          <div className=\"w-16 h-16 bg-muted rounded-full mx-auto mb-4 flex items-center justify-center\">\n            <CreditCard className=\"w-8 h-8 text-muted-foreground\" />\n          </div>\n          <CardTitle className=\"mb-2\">Compare Credit Cards</CardTitle>\n          <CardDescription className=\"mb-4\">\n            Select cards to see a detailed side-by-side comparison\n          </CardDescription>\n          <Button onClick={onCardAdd}>\n            <Plus className=\"w-4 h-4 mr-2\" /> Add Cards to Compare\n          </Button>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className={`space-y-4 ${className}`}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h3 className=\"text-lg font-semibold\">Card Comparison</h3>\n          <p className=\"text-sm text-muted-foreground\">\n            Compare {selectedCards.length} cards side by side\n          </p>\n        </div>\n        {selectedCards.length < 3 && (\n          <Button variant=\"outline\" size=\"sm\" onClick={onCardAdd}>\n            <Plus className=\"w-4 h-4 mr-2\" /> Add Card\n          </Button>\n        )}\n      </div>\n\n      {/* Card Headers */}\n      <div className={`grid gap-4 ${columnGrid}`}>\n        {selectedCards.map((card) => (\n          <Card key={card.id} className=\"relative\">\n            <CardHeader className=\"pb-3\">\n              <div className=\"flex items-start justify-between\">\n                <div>\n                  <CardTitle className=\"text-base\">{card.name}</CardTitle>\n                  <CardDescription className=\"text-sm\">{card.issuer}</CardDescription>\n                </div>\n                {onCardRemove && (\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => onCardRemove(card.id)}\n                    className=\"h-6 w-6 p-0\"\n                  >\n                    <X className=\"h-4 w-4\" />\n                  </Button>\n                )}\n              </div>\n              <div className=\"flex gap-2 mt-3\">\n                <Badge variant={card.annualFee === 0 ? \"secondary\" : \"outline\"} className=\"text-xs\">\n                  {card.annualFee === 0 ? \"No Fee\" : `$${card.annualFee}`}\n                </Badge>\n                <Badge variant=\"outline\" className=\"text-xs\">\n                  {card.baseReward}% Base\n                </Badge>\n              </div>\n            </CardHeader>\n          </Card>\n        ))}\n      </div>\n\n      {/* Comparison Table */}\n      <Card>\n        <CardContent className=\"p-0\">\n          {COMPARISON_CATEGORIES.map((category, index) => {\n            const bestValue = getBestValue(category);\n\n            return (\n              <div key={category.key}>\n                <div className={`grid gap-4 p-4 ${comparisonGrid}`}>\n                  <div className=\"flex items-center gap-2 text-sm font-medium\">\n                    {category.label}\n                    {category.key === \"features\" && (\n                      <Info className=\"h-3 w-3 text-muted-foreground\" />\n                    )}\n                  </div>\n\n                  {selectedCards.map((card) => {\n                    const value = formatValue(card, category);\n                    const highlight = isHighlighted(card, category, bestValue);\n\n                    if (category.type === \"list\") {\n                      const features = value as string[];\n                      const isExpanded = expandedCardId === card.id;\n                      return (\n                        <div key={card.id} className=\"space-y-1\">\n                          {features.slice(0, 3).map((feat, i) => (\n                            <div key={i} className=\"flex items-center gap-2 text-xs\">\n                              <Check className=\"h-3 w-3 text-green-600\" />\n                              <span>{feat}</span>\n                            </div>\n                          ))}\n                          {features.length > 3 && (\n                            <Button\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              className=\"h-6 text-xs p-0 text-muted-foreground\"\n                              onClick={() =>\n                                setExpandedCardId(isExpanded ? null : card.id)\n                              }\n                            >\n                              {isExpanded ? \"Show less\" : `+${features.length - 3} more`}\n                            </Button>\n                          )}\n                          {isExpanded && (\n                            <div className=\"space-y-1 pt-2\">\n                              {features.slice(3).map((feat, i) => (\n                                <div key={i} className=\"flex items-center gap-2 text-xs\">\n                                  <Check className=\"h-3 w-3 text-green-600\" />\n                                  <span>{feat}</span>\n                                </div>\n                              ))}\n                            </div>\n                          )}\n                        </div>\n                      );\n                    }\n\n                    return (\n                      <div\n                        key={card.id}\n                        className={`text-sm ${\n                          highlight ? \"font-semibold text-green-600\" : \"\"\n                        }`}\n                      >\n                        {highlight && <Star className=\"h-3 w-3 inline mr-1 text-green-600\" />}\n                        {value}\n                      </div>\n                    );\n                  })}\n                </div>\n                {index < COMPARISON_CATEGORIES.length - 1 && <Separator />}\n              </div>\n            );\n          })}\n        </CardContent>\n      </Card>\n\n      {/* Bottom Summary */}\n      <Card className=\"bg-muted/50\">\n        <CardContent className=\"p-4 text-center\">\n          <h4 className=\"font-semibold mb-2\">Quick Recommendation</h4>\n          <p className=\"text-sm text-muted-foreground mb-3\">\n            Based on general spending patterns, here’s our suggestion:\n          </p>\n          {selectedCards.length >= 2 && (\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-center gap-4 text-xs\">\n                <div>\n                  <div className=\"font-medium\">Best for No Fee</div>\n                  <div className=\"text-muted-foreground\">\n                    {selectedCards.find(c => c.annualFee === 0)?.name || \"None\"}\n                  </div>\n                </div>\n                <div>\n                  <div className=\"font-medium\">Highest Base Rate</div>\n                  <div className=\"text-muted-foreground\">\n                    {\n                      selectedCards.find(\n                        c => c.baseReward === Math.max(...selectedCards.map(c => c.baseReward))\n                      )?.name || \"None\"\n                    }\n                  </div>\n                </div>\n              </div>\n              <Button size=\"sm\" variant=\"outline\">Get Personalized Recommendation</Button>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 598, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jawwa/OneDrive/Desktop/Documents/My-Projects/CashReap/CashReap-1/cashreap/src/app/page.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { CardComparison } from '@/components/card-comparison';\n\nexport default function Home() {\n  const [cards, setCards] = useState(/* initial cards or [] */);\n\n  const handleCardRemove = (cardId: string) => {\n    setCards(prev => prev.filter(card => card.id !== cardId));\n  };\n\n  const handleCardAdd = () => {\n    // your logic to add cards, e.g., open modal or add a default card\n  };\n\n  return (\n    <main className=\"p-8 min-h-screen bg-background\">\n      <CardComparison\n        selectedCards={cards}\n        onCardRemove={handleCardRemove}\n        onCardAdd={handleCardAdd}\n      />\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD;IAEjC,MAAM,mBAAmB,CAAC;QACxB,SAAS,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK;IACnD;IAEA,MAAM,gBAAgB;IACpB,kEAAkE;IACpE;IAEA,qBACE,8OAAC;QAAK,WAAU;kBACd,cAAA,8OAAC,kJAAA,CAAA,iBAAc;YACb,eAAe;YACf,cAAc;YACd,WAAW;;;;;;;;;;;AAInB","debugId":null}}]
}